<PlayBackButton>:
    size_hint: None, None
    height: int(self.parent.height) - 1
    width: int(self.height)

<PlaybackBarVolumeButton@HoverCanvasButton>
<PlaybackBarShuffleButton@HoverCanvasButton>

<PlayBackBar>:
    background_color: app.mtheme.bar_color
    spacing: 1
    canvas.before:
        Color:
            rgb: self.background_color
        Rectangle:
            size: self.size
            pos: self.pos

    PlayBackButton:
        id: btn1
        text: 'Previous'
        on_release: root.on_prevbtn()

    PlayBackButton:
        id: btn2
        text: 'Play'
        on_release: root.on_playbtn()

    PlayBackButton:
        id: btn3
        text: 'Next'
        on_release: root.on_nextbtn()

    Widget:
        id: sep1
        size_hint_x: None
        width: int(cm(0.4))

    Label:
        id: progress_label1
        size_hint_x: None
        width: int(self.texture_size[0] + cm(0.5))
        text: root.media_progress_val_readable
    SliderProgressBar:
        id: progress1
        size_hint_x: None
        width: int(root.width - btn1.width - btn2.width - btn3.width - sep1.width - sep2.width - sep3.width - btn_volume.width - progress2.width - cm(0.7) - progress_label1.width - progress_label2.width)
        max: root.media_progress_max
    Label:
        id: progress_label2
        size_hint_x: None
        width: int(self.texture_size[0] + cm(0.5))
        text: root.media_progress_max_readable

    Widget:
        id: sep2
        size_hint_x: None
        width: int(cm(0.4))

    PlaybackBarVolumeButton:
        id: btn_volume
        size_hint: None, None
        pos_hint: {'center_y': 0.5}
        width: int(cm(0.5))
        height: self.width

    PlaybackBarShuffleButton:
        id: btn_shuffle
        size_hint: None, None
        pos_hint: {'center_y': 0.5}
        width: int(cm(0.5))
        height: self.width
        # on_press: app.toggle_shuffle()

    Widget:
        id: sep3
        size_hint_x: None
        width: int(cm(0.1))

    SliderProgressBar:
        id: progress2
        size_hint_x: None
        width: int(cm(2.5))
        max: 100.0
        value: int(self.seeking_touch_value) if self.seeking_touch else int(root.media_volume)
